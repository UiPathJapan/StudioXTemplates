<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1061,2929" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationX</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="616,2864" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap2010:Annotation.AnnotationText="これは、完全に機能するテンプレートです。試しに実行するには [実行] をクリック、または F5 キーを押します。&#xA;&#xA;ベスト プラクティスでは、1 つ以上のアクティビティで使用する値を後で使用するために保存し、保存した値を必要な場所で名前を使って参照します。この方法を活用すれば、値を変更する必要がある場合でも、値を 1 度更新するだけですべてのアクティビティにおける値が更新されます。&#xA;&#xA;この例では、完成したテンプレートの名前が 2 つの別々のアクションで使用されます。&#xA;1.1. [名前をつけて文書を保存] アクティビティでテンプレートのコピーを変更対象として作成するとき&#xA;2. メールに添付するファイルを指定するとき" DisplayName="後のために保存 - 完了した Word テンプレートの名前" sap:VirtualizedContainerService.HintSize="574,273" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="ue:ExcelValue">[Saved.Values(Of ExcelValue)("Completed Template File")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ue:ExcelValue">[string.Format("CompletedAttachment.docx")]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ueab:ExcelApplicationCard Password="{x:Null}" sap2010:Annotation.AnnotationText="添付ファイルの作成に使用する情報を含む Excel ファイルを開きます。" DisplayName="Excel ファイルを使用" sap:VirtualizedContainerService.HintSize="574,2461" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="People.xlsx">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="People" />
          </ActivityAction.Argument>
          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="562,2171" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelForEachRow sap2010:Annotation.AnnotationText="指定した Excel 範囲の各行を処理します。各行に対して Word 文書のコピーを作成し、指定したテキストを Excel からの値で置換します。その後、そのファイルを添付したメールを各受信者に対して作成します。" DisplayName="Excel の繰り返し (各行)" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="520,2081" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_1" Range="[People.Table(&quot;Table1&quot;)]" SaveAfterEachRow="False">
              <ueab:ExcelForEachRow.Body>
                <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="508,1839" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordApplicationScope sap2010:Annotation.AnnotationText="[ファイルをコピー] アクティビティで作成した Word テンプレートのコピーを開きます。" DisplayName="Word ファイルを使用" FilePath="WelcomeTemplate.docx" sap:VirtualizedContainerService.HintSize="466,1002" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                      <p:WordApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WordDocument">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="454,802" sap2010:WorkflowViewState.IdRef="Sequence_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:WordSaveAs sap2010:Annotation.AnnotationText="変更が加える前に、テンプレートを新規ファイルとして保存します。これにより、元のテンプレートに変更が加えられることなく次回もそのまま使用できます。&#xA;&#xA;このアクティビティは、[後のために保存] アクティビティで指定した値を新しいファイル名として使用します。" DisplayName="名前をつけて文書を保存" FilePath="[Saved.Values(Of ExcelValue)(&quot;Completed Template File&quot;)]" sap:VirtualizedContainerService.HintSize="412,268" sap2010:WorkflowViewState.IdRef="WordSaveAs_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordSaveAs>
                            <p:WordReplaceText Found="{x:Null}" sap2010:Annotation.AnnotationText="Word ファイル内のテキスト「[first name]」のすべての一致を、Excel 範囲の各行の「FName」の値で置換します。" DisplayName="Word ファイルのテキストを置換" sap:VirtualizedContainerService.HintSize="412,203" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[CurrentRow.ByField(&quot;FName&quot;)]" ReplaceAll="True" Search="%[first name]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordReplaceText>
                            <p:WordReplaceText Found="{x:Null}" DisplayName="Word ファイルのテキストを置換" sap:VirtualizedContainerService.HintSize="412,161" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[CurrentRow.ByField(&quot;Password&quot;)]" ReplaceAll="True" Search="&lt;password&gt;" />
                          </Sequence>
                        </ActivityAction>
                      </p:WordApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:WordApplicationScope>
                    <umab:OutlookApplicationCard Account="{x:Null}" DisplayName="Outlook アカウントを使用" sap:VirtualizedContainerService.HintSize="466,707" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_1">
                      <umab:OutlookApplicationCard.Body>
                        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlook" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="454,523" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" Account="[Outlook]" sap2010:Annotation.AnnotationText="Outlook でメールを作成し、[下書き] フォルダーに保存します。[下書き] のチェックボックスをオフにすると、メールは自動的に送信されます。" Body="[string.Format(&quot;Hi {0} {1},{2}{3}A welcome document with a temporary password is attached.{4}{5}Regards&quot;, CurrentRow.ByField(&quot;FName&quot;), CurrentRow.ByField(&quot;LName&quot;), Environment.NewLine, Environment.NewLine, Environment.NewLine, Environment.NewLine)]" DisplayName="Outlook メールを送信" sap:VirtualizedContainerService.HintSize="412,433" sap2010:WorkflowViewState.IdRef="SendMailX_1" MaxBodyDocumentSizeMB="2" Subject="Welcome to StudioX" To="[CurrentRow.ByField(&quot;Email&quot;)]">
                              <umab:SendMailX.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                  <InArgument x:TypeArguments="x:String">[Saved.Values(Of ExcelValue)("Completed Template File")]</InArgument>
                                </scg:List>
                              </umab:SendMailX.Files>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </umab:SendMailX>
                          </Sequence>
                        </ActivityAction>
                      </umab:OutlookApplicationCard.Body>
                    </umab:OutlookApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelForEachRow>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
  </ueab:SequenceX>
</Activity>
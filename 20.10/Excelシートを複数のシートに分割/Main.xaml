<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1408,4092" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="548,4027" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.ja.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;InputData.xlsx&quot;,autoSave:=True,readOnly:=False,isWorkspace:=False)]" Name="ExcelInput" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DeleteFileX sap2010:Annotation.AnnotationText="これは完全に機能するテンプレートです。試しに実行するには [実行] をクリック、または F5 キーを押します。&#xA;出力ファイルが既に存在する場合は、ファイルを削除します。" DisplayName="ファイルを削除" sap:VirtualizedContainerService.HintSize="506,135" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[string.Format(&quot;{0}\CategorizedOutput.xlsx&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments))]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:DeleteFileX>
    <ueab:ExcelApplicationCard Password="{x:Null}" sap2010:Annotation.AnnotationText="この [Excel ファイルを使用] アクティビティで参照する Excel ブックは現時点ではまだ存在しません。つまり、このファイルはワークフローを実行すると作成されます。&#xA;&#xA;このテンプレート内で [ExcelInput] と呼ばれている Excel シートは、プロジェクト レベルのリソースとして参照されます。名前と場所が常に変わらない Excel ファイルは、デザイナー パネル内をシンプルに保つためのリソースとして追加できます。Excel ファイルに接続するには、以下の手順に従います。&#xA;- デザイナー パネルの Main 画面の右側にある [データ マネージャー] タブを開きます。&#xA;- ツールボード上のフォルダー アイコンをクリックします。&#xA;- [新しい Excel ファイルに接続...] を選択します。" DisplayName="Excel ファイルを使用" sap:VirtualizedContainerService.HintSize="506,3762" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="[string.Format(&quot;{0}\CategorizedOutput.xlsx&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments))]">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="OutputExcel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="494,3356" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="[グループ] アクティビティを使用することで、プロジェクトを整理できます。グループ内のアクティビティを操作していないときは、グループを折りたたむことができるので、必要な作業に集中できます。" DisplayName="グループ - 'France' を処理" sap:VirtualizedContainerService.HintSize="452,1599" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:RenameSheetX sap2010:Annotation.AnnotationText="既定の名前「Sheet1」を、シートに含まれるデータに即した分かりやすい名前に変更します。" DisplayName="シート名を変更" From="[OutputExcel.Sheet(&quot;Sheet1&quot;)]" sap:VirtualizedContainerService.HintSize="412,178" sap2010:WorkflowViewState.IdRef="RenameSheetX_1" To="France">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:RenameSheetX>
              <ueab:FilterX sap2010:Annotation.AnnotationText="ソース シートをフィルター処理し、1 つ目のデータ カテゴリを抽出します。&#xA;フィルターのプロパティを設定するには [フィルターを設定] をクリックします。" ClearFilter="False" ColumnName="Country" DisplayName="フィルター" HasHeaders="True" sap:VirtualizedContainerService.HintSize="412,209" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[ExcelInput.Sheet(&quot;Sheet1&quot;)]">
                <ueab:FilterX.FilterArgument>
                  <ueabf:FilterArgument Mode="Basic">
                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                        <ueabf:AdvancedFilterArgument.Condition1>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterArgument.Condition2>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition2>
                      </ueabf:AdvancedFilterArgument>
                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:FilterArgument.BasicFiltersArgument>
                      <ueabf:BasicFilterArgument>
                        <ueabf:BasicFilterArgument.BasicFilters>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">France</InArgument>
                          </scg:List>
                        </ueabf:BasicFilterArgument.BasicFilters>
                      </ueabf:BasicFilterArgument>
                    </ueabf:FilterArgument.BasicFiltersArgument>
                  </ueabf:FilterArgument>
                </ueab:FilterX.FilterArgument>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:FilterX>
              <ueab:CopyPasteRangeX sap2010:Annotation.AnnotationText="ソース シートのヘッダー行を新しいシートにコピーします。" DestinationRange="[OutputExcel.Sheet(&quot;France&quot;)]" DisplayName="範囲をコピー/貼り付け" sap:VirtualizedContainerService.HintSize="412,240" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_1" PasteOptions="All" SourceRange="[ExcelInput.Sheet(&quot;Sheet1&quot;)]" Transpose="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:CopyPasteRangeX>
              <ueab:CreateTableX TableName="{x:Null}" sap2010:Annotation.AnnotationText="[France] シート内のデータを表として書式設定します。範囲にヘッダーが含まれない場合は、StudioX の右上にある [プロパティ] パネルを使用してこの設定を変更できます。&#xA;&#xA;[新しい表の名前] に値を入力しない場合、名前が自動的に生成されます。自動生成された名前は、[新しい表に名前をつけて保存] フィールドを使用して保存し、後で参照することができます。" DisplayName="表として書式設定" HasHeaders="True" sap:VirtualizedContainerService.HintSize="412,341" sap2010:WorkflowViewState.IdRef="CreateTableX_1" OutTableName="[Saved.Values(Of String)(&quot;Automatically Named Table&quot;)]" Range="[OutputExcel.Sheet(&quot;France&quot;)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:CreateTableX>
              <WriteLine sap2010:Annotation.AnnotationText="この値は、[出力] パネル (左下のタブからアクセス可能) に表示されます。&#xA;&#xA;[1 行を書き込み] アクティビティは、値の検証やトラブルシューティングを行う必要がある際に、アプリケーション内で何が起こっているかを確認するのに便利です。詳しくはリンク先をご覧ください: https://docs.uipath.com/studiox/lang-ja/docs/automation-best-practices#section-generate-messages-at-key-points-in-the-automation" DisplayName="1 行を書き込み" sap:VirtualizedContainerService.HintSize="412,297" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[string.Format(&quot;Inserted table was named &quot;&quot;{0}&quot;&quot;&quot;, Saved.Values(Of String)(&quot;Automatically Named Table&quot;))]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </WriteLine>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="[グループ] アクティビティの表示名を編集してわかりやすい名前を付けることができます。編集するには、表示名をクリックします。" DisplayName="グループ - 'Germany' を処理" sap:VirtualizedContainerService.HintSize="452,830" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:InsertSheetX sap2010:Annotation.AnnotationText="別のデータ カテゴリ用に 2 枚目のシートを作成します。" DisplayName="シートを挿入" sap:VirtualizedContainerService.HintSize="412,215" sap2010:WorkflowViewState.IdRef="InsertSheetX_1" Name="Germany" ReferenceNewSheetAs="[Saved.Values(Of ISheetRef)(&quot;Sheet: Germany&quot;)]" Workbook="[OutputExcel]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:InsertSheetX>
              <ueab:FilterX ClearFilter="False" ColumnName="Country" DisplayName="フィルター" HasHeaders="True" sap:VirtualizedContainerService.HintSize="412,167" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[ExcelInput.Sheet(&quot;Sheet1&quot;)]">
                <ueab:FilterX.FilterArgument>
                  <ueabf:FilterArgument Mode="Basic">
                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                        <ueabf:AdvancedFilterArgument.Condition1>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterArgument.Condition2>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition2>
                      </ueabf:AdvancedFilterArgument>
                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:FilterArgument.BasicFiltersArgument>
                      <ueabf:BasicFilterArgument>
                        <ueabf:BasicFilterArgument.BasicFilters>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">Germany</InArgument>
                          </scg:List>
                        </ueabf:BasicFilterArgument.BasicFilters>
                      </ueabf:BasicFilterArgument>
                    </ueabf:FilterArgument.BasicFiltersArgument>
                  </ueabf:FilterArgument>
                </ueab:FilterX.FilterArgument>
              </ueab:FilterX>
              <ueab:CopyPasteRangeX DestinationRange="[Saved.Values(Of ISheetRef)(&quot;Sheet: Germany&quot;)]" DisplayName="範囲をコピー/貼り付け" sap:VirtualizedContainerService.HintSize="412,209" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_2" PasteOptions="All" SourceRange="[ExcelInput.Sheet(&quot;Sheet1&quot;)]" Transpose="False" />
            </Sequence>
            <Sequence DisplayName="グループ - 'USA' を処理" sap:VirtualizedContainerService.HintSize="452,757" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:InsertSheetX DisplayName="シートを挿入" sap:VirtualizedContainerService.HintSize="412,184" sap2010:WorkflowViewState.IdRef="InsertSheetX_2" Name="USA" ReferenceNewSheetAs="[Saved.Values(Of ISheetRef)(&quot;Sheet: USA&quot;)]" Workbook="[OutputExcel]" />
              <ueab:FilterX ClearFilter="False" ColumnName="Country" DisplayName="フィルター" HasHeaders="True" sap:VirtualizedContainerService.HintSize="412,167" sap2010:WorkflowViewState.IdRef="FilterX_3" Range="[ExcelInput.Sheet(&quot;Sheet1&quot;)]">
                <ueab:FilterX.FilterArgument>
                  <ueabf:FilterArgument Mode="Basic">
                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                        <ueabf:AdvancedFilterArgument.Condition1>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterArgument.Condition2>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition2>
                      </ueabf:AdvancedFilterArgument>
                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:FilterArgument.BasicFiltersArgument>
                      <ueabf:BasicFilterArgument>
                        <ueabf:BasicFilterArgument.BasicFilters>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">USA</InArgument>
                          </scg:List>
                        </ueabf:BasicFilterArgument.BasicFilters>
                      </ueabf:BasicFilterArgument>
                    </ueabf:FilterArgument.BasicFiltersArgument>
                  </ueabf:FilterArgument>
                </ueab:FilterX.FilterArgument>
              </ueab:FilterX>
              <ueab:CopyPasteRangeX DestinationRange="[Saved.Values(Of ISheetRef)(&quot;Sheet: USA&quot;)]" DisplayName="範囲をコピー/貼り付け" sap:VirtualizedContainerService.HintSize="412,209" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_3" PasteOptions="All" SourceRange="[ExcelInput.Sheet(&quot;Sheet1&quot;)]" Transpose="False" />
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
  </ueab:SequenceX>
</Activity>
<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1248,9360" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ucat="clr-namespace:UiPath.Core.Activities.TextModifications;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="669.6,9295.2" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.ja.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <uix:NApplicationCard AttachMode="ByInstance" DisplayName="ブラウザーを使用 IE: Sales Opportunities" sap:VirtualizedContainerService.HintSize="626.4,572" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" Version="V1">
      <uix:NApplicationCard.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
          </ActivityAction.Argument>
          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="400,350.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uix:NExtractData sap2010:Annotation.AnnotationText="[表データを抽出] アクティビティは、表抽出ウィザードを使用して指定した情報をすべて抽出します。&#xA;&#xA;抽出したデータは Excel に直接書き込むことも、後で使用するために保存することもできます。" AppendResults="False" ContinueOnError="True" DataTable="[Saved.Values(Of DataTable)(&quot;DataTable from Extract Table Data&quot;)]" DisplayName="表データを抽出" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="356.8,257.6" sap2010:WorkflowViewState.IdRef="NExtractData_1" MaximumResults="100">
              <uix:NExtractData.Target>
                <uix:TargetAnchorable DesignTimeRectangle="171, 157, 1226, 803" ElementType="Table" FriendlyName="'TABLE'" FullSelectorArgument="&lt;webctrl tag='TABLE' /&gt;" InformativeScreenshot="e56825aff3179723ebb1cb08a44ed373.png" ScopeSelectorArgument="&lt;html title='Sales Opportunities' /&gt;" SearchSteps="Selector" />
              </uix:NExtractData.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uix:NExtractData>
          </Sequence>
        </ActivityAction>
      </uix:NApplicationCard.Body>
      <uix:NApplicationCard.TargetApp>
        <uix:TargetApp BrowserType="IE" IconBase64="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" InformativeScreenshot="9dcd7847f4641197e2f44562cbf4db49.png" Selector="&lt;html title='Sales Opportunities'/&gt;" Url="https://www.rpasamples.com/opportunities" />
      </uix:NApplicationCard.TargetApp>
    </uix:NApplicationCard>
    <ueab:ExcelApplicationCard Password="{x:Null}" sap2010:Annotation.AnnotationText="データが保存される最終レポートを作成します。 " DisplayName="Excel ファイルを使用" sap:VirtualizedContainerService.HintSize="626.4,8592" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="Opportunities Report Template.xlsx">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
          </ActivityAction.Argument>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="614.4,8298.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:SaveExcelFileAsX sap2010:Annotation.AnnotationText="毎回既存のテンプレートから開始してから変更用の新しいコピーを保存すると、プロジェクトを複数回実行しやすくなります。" DisplayName="名前を付けて Excel ファイルを保存" FilePath="Opportunities Report.xlsx" sap:VirtualizedContainerService.HintSize="571.2,256" sap2010:WorkflowViewState.IdRef="SaveExcelFileAsX_1" SaveAsFileType="OpenXmlWorkbook" Workbook="[Excel]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:SaveExcelFileAsX>
            <ueab:ClearRangeX sap2010:Annotation.AnnotationText="ファイルが既に存在する場合は、Sheet1 内のデータをすべてクリアします。この例では、テンプレート ファイルは、自動化ワークフローが作成する列が含まれるヘッダーをデータ シートが含んでいるため、データをクリアすることは役に立ちます。コンテンツをクリアすることで、自動化ワークフローの実行時に、重複列や順不同の列などといった問題が確実に発生しないようにします。&#xA;&#xA;ヘッダーをクリアするには、[先頭行をヘッダーとする] オプションはオフにします。このオプションがオンになっていると、すべてのデータがクリアされますが、ヘッダーは変更されません。" DisplayName="シート/範囲/表をクリア" HasHeaders="False" sap:VirtualizedContainerService.HintSize="571.2,270.4" sap2010:WorkflowViewState.IdRef="ClearRangeX_1" TargetRange="[Excel.Sheet(&quot;Data&quot;)]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ClearRangeX>
            <ueab:WriteRangeX sap2010:Annotation.AnnotationText="[範囲に書き込み] アクティビティは、[表データを抽出] アクティビティで、後で使用するために保存したデータを Excel に書き込みます。" Destination="[Excel.Sheet(&quot;Data&quot;)]" DisplayName="範囲に書き込み" sap:VirtualizedContainerService.HintSize="571.2,208" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[Saved.Values(Of DataTable)(&quot;DataTable from Extract Table Data&quot;)]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:WriteRangeX>
            <Sequence sap2010:Annotation.AnnotationText="抽出されたデータはドル、ユーロ、円で示される値を含みます。データの一貫性のために、単位を標準化する必要があります。この自動化ワークフローは、単位をドルに標準化します。" DisplayName="米国ドルに標準化" sap:VirtualizedContainerService.HintSize="571.2,2613.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap2010:Annotation.AnnotationText="[入力ダイアログ] アクティビティは、自動化ワークフローの実行中に、入力画面を表示します。この入力画面は、何を入力するかを示す補助的なメッセージを表示します。&#xA;&#xA;結果は、テキスト値を格納できる場所であればどこでも格納できます。この例では、テキスト値は数式で使用するために Excel に保存されます。" DisplayName="入力ダイアログ" sap:VirtualizedContainerService.HintSize="530.4,364" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="円/米ドル の為替レートを入力してください (例：0.0094)" Title="円/米ドル の為替レート">
                <ui:InputDialog.Result>
                  <OutArgument x:TypeArguments="ue:ExcelValue">[Excel.Sheet("Conversion").Cell("B2")]</OutArgument>
                </ui:InputDialog.Result>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InputDialog>
              <ueab:InsertColumnX sap2010:Annotation.AnnotationText="米国ドルに標準化された価格を含む新しい列を挿入します。" DisplayName="列を挿入" HasHeaders="True" sap:VirtualizedContainerService.HintSize="530.4,235.2" sap2010:WorkflowViewState.IdRef="InsertColumnX_1" NewColumnName="Total (USD)" Range="[Excel.Sheet(&quot;Data&quot;)]" RelativeColumnName="Total Price" RelativePosition="After">
                <ueab:InsertColumnX.ColumnFormat>
                  <ueab:CustomFormat FormatAsString="&quot;USD&quot; #,##0.00;&quot;USD&quot; -#,##0.00" />
                </ueab:InsertColumnX.ColumnFormat>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:InsertColumnX>
              <ueab:ExcelForEachRow sap2010:Annotation.AnnotationText="各行を処理する必要があります。" DisplayName="繰り返し (Excel の各行)" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="530.4,1772" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_1" Range="[Excel.Sheet(&quot;Data&quot;)]" SaveAfterEachRow="False">
                <ueab:ExcelForEachRow.Body>
                  <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                    <ActivityAction.Argument1>
                      <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                    </ActivityAction.Argument1>
                    <ActivityAction.Argument2>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                    </ActivityAction.Argument2>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="518.4,1551.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:TextToLeftRight sap2010:Annotation.AnnotationText="[左側/右側のテキスト] アクティビティは、[Currency] と値を分けている空白 (' ') の両側のテキストを取得します。[区切り記号] フィールドには空白が設定されています。&#xA;- [通貨] の値 (’ ’ の左側) は後で使用するために保存されます。&#xA;- 価格には追加の変更が必要なため、プロジェクト ノートブックのスクラッチパッドに一時的に保存されます。" DisplayName="左側/右側のテキスト" FullText="[CurrentRow.ByField(&quot;Total Price&quot;)]" sap:VirtualizedContainerService.HintSize="475.2,352.8" sap2010:WorkflowViewState.IdRef="TextToLeftRight_1" Separator=" " TextToLeft="[Saved.Values(Of String)(&quot;Currency&quot;)]" TextToRight="[Saved.Values(Of String)(&quot;Price (needs modification)&quot;)]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:TextToLeftRight>
                      <ui:ModifyText sap2010:Annotation.AnnotationText="書式設定された価格はコンマ (,) を含むことがあります。コンマが含まれると、米国ドルに変換するために数字を掛けるときに問題が発生します。そのため、記号がない状態に置換します (例: 1,000 は 1000 になります)。" DisplayName="テキストを変更" sap:VirtualizedContainerService.HintSize="475.2,408" sap2010:WorkflowViewState.IdRef="ModifyText_1" OutputText="[Saved.Values(Of String)(&quot;Price&quot;)]" SourceText="[Saved.Values(Of String)(&quot;Price (needs modification)&quot;)]">
                        <ui:ModifyText.Body>
                          <ActivityAction>
                            <Sequence DisplayName="実行" sap2010:WorkflowViewState.IdRef="Sequence_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ucat:FindAndReplaceTextModification ReplaceText="{x:Null}" DisplayName="テキストを検索して置換" sap:VirtualizedContainerService.HintSize="382.4,148.8" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextModification_1" SearchText="," />
                            </Sequence>
                          </ActivityAction>
                        </ui:ModifyText.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ModifyText>
                      <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Switch ステートメントは、複数の条件をきれいに整理します。&#xA;- 各「Case」は「&lt;Expression&gt; が &lt;case&gt; と等しい場合は実行する」を意味します。&#xA;- 「Default」の case は、&lt;Expresion&gt; が他のどの case とも一致しない場合に実行されます ([条件分岐] アクティビティにおける [Else] と同じ)。&#xA;&#xA;この例では、データが米国ドル、ユーロ、日本円のいずれかであり、Switch ステートメントがこれらの 3 つの条件をきれいに整理します。ここでは、「米国ドル」が「Default」であることを前提とします。&#xA;" DisplayName="スイッチ" Expression="[Saved.Values(Of String)(&quot;Currency&quot;)]" sap:VirtualizedContainerService.HintSize="475.2,619.2" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                        <Switch.Default>
                          <Sequence DisplayName="グループ" sap:VirtualizedContainerService.HintSize="459,282" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteCellX sap2010:Annotation.AnnotationText="米国ドルであるため、価格のみを書き込みます。" Cell="[CurrentRow.ByField(&quot;Total (USD)&quot;)]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="417,192" sap2010:WorkflowViewState.IdRef="WriteCellX_3" Value="[Saved.Values(Of String)(&quot;Price&quot;)]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:WriteCellX>
                          </Sequence>
                        </Switch.Default>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence x:Key="EUR" sap:VirtualizedContainerService.HintSize="455.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:WriteCellX sap2010:Annotation.AnnotationText="保存したユーロの変換値を参照する数式を挿入します。" Cell="[CurrentRow.ByField(&quot;Total (USD)&quot;)]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="412,194.4" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[string.Format(&quot;={0}*Conversion!$B$1&quot;, Saved.Values(Of String)(&quot;Price&quot;))]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:WriteCellX>
                        </Sequence>
                        <Sequence x:Key="JPY" sap:VirtualizedContainerService.HintSize="455.2,254.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Total (USD)&quot;)]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="412,163.2" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[string.Format(&quot;={0}*Conversion!$B$2&quot;, Saved.Values(Of String)(&quot;Price&quot;))]" />
                        </Sequence>
                      </Switch>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelForEachRow>
            </Sequence>
            <Sequence DisplayName="ステージごとに値を計算するピボット テーブルを作成" sap:VirtualizedContainerService.HintSize="571.2,1744.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:CreateTableX TableName="{x:Null}" DisplayName="表として書式設定" HasHeaders="True" sap:VirtualizedContainerService.HintSize="416.8,226.4" sap2010:WorkflowViewState.IdRef="CreateTableX_1" OutTableName="[Saved.Values(Of String)(&quot;Inserted Table&quot;)]" Range="[Excel.Sheet(&quot;Data&quot;)]" />
              <ueab:CreatePivotTableX DestinationRange="[Excel.Sheet(&quot;Pivot Table&quot;)]" DisplayName="ピボット テーブルを作成" sap:VirtualizedContainerService.HintSize="416.8,524" sap2010:WorkflowViewState.IdRef="CreatePivotTableX_1" Range="[Excel.Table(Saved.Values(Of String)(&quot;Inserted Table&quot;))]" TableName="Pivot_Table" ValuesMode="Columns">
                <ueab:CreatePivotTableX.Body>
                  <ActivityAction>
                    <Sequence DisplayName="実行" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:PivotTableFieldX DisplayName="ピボット フィールド" FieldName="Stage" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,84" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_1" Type="Row" />
                      <ueab:PivotTableFieldX DisplayName="ピボット フィールド" FieldName="Total (USD)" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,84" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_2" Type="Value" />
                      <ueab:PivotTableFieldX DisplayName="ピボット フィールド" FieldName="Account Name" Function="Count" sap:VirtualizedContainerService.HintSize="382.4,84" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_3" Type="Value" />
                    </Sequence>
                  </ActivityAction>
                </ueab:CreatePivotTableX.Body>
              </ueab:CreatePivotTableX>
              <ueab:FindFirstLastDataRowX FirstRowIndex="{x:Null}" sap2010:Annotation.AnnotationText="いくつかの操作で、自動化ワークフローはピボット テーブルの [Total] 行を見つける必要がありますが、これは表そのものの一部ではありません。&#xA;&#xA;自動化ワークフローを実行する前は行がいくつあるかは分からないため、[最初/最後のデータ行を検索] アクティビティで表の最終行の行番号を取得します。" BlankRowsToSkip="1" ColumnName="A" DisplayName="最初/最後のデータ行を検索" FirstRowOffset="0" HasHeaders="True" sap:VirtualizedContainerService.HintSize="416.8,349.6" sap2010:WorkflowViewState.IdRef="FindFirstLastDataRowX_1" LastRowIndex="[Saved.Values(Of Int32)(&quot;Last Pivot Table Row&quot;)]" LastRowOffset="0" Range="[Excel.Sheet(&quot;Pivot Table&quot;).PivotTable(&quot;Pivot_Table&quot;)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:FindFirstLastDataRowX>
              <Assign sap2010:Annotation.AnnotationText="[総計] 行は、最終行の 1 つ下に追加されます。[+] アイコン下のメニュー下の [数値] オプションは、加算などの算術演算をサポートします。" DisplayName="後のために保存" sap:VirtualizedContainerService.HintSize="416.8,125.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[Saved.Values(Of Int32)("Last Pivot Table Row")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[Saved.Values(Of Int32)("Last Pivot Table Row")+1]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ueab:FormatRangeX sap2010:Annotation.AnnotationText="Price 範囲内のすべての値を「通貨」として書式設定します。これにより、レポート内できれいに書式設定された結果が表示されます。&#xA;&#xA;前のアクティビティで計算された「Last Pivot Table Row」を使用するには、[カスタム入力] を開き、[テキスト ビルダー] を使用して作成された範囲を手動で開きます。例えば、この例では「B2:B&lt;Last Pivot Table Row&gt;」です。" DisplayName="セルを書式設定" sap:VirtualizedContainerService.HintSize="416.8,240.8" sap2010:WorkflowViewState.IdRef="FormatRangeX_1" Range="[Excel.Sheet(&quot;Pivot Table&quot;).Range(string.Format(&quot;B2:B{0}&quot;, Saved.Values(Of Int32)(&quot;Last Pivot Table Row&quot;).ToString))]">
                <ueab:FormatRangeX.Format>
                  <ueab:CurrencyFormat Currency="$" DecimalPlaces="2" SetAtTheEnd="False" UseThousandSeparator="True" />
                </ueab:FormatRangeX.Format>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:FormatRangeX>
            </Sequence>
            <ui:PowerPointApplicationScope Password="{x:Null}" CreateIfNotExists="True" DisplayName="PowerPoint プレゼンテーションを使用" sap:VirtualizedContainerService.HintSize="571.2,2914.4" sap2010:WorkflowViewState.IdRef="PowerPointApplicationScope_1" PresentationPath="Report Template.pptx" TemplatePath="Report Template.pptx">
              <ui:PowerPointApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:IPresentationQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IPresentationQuickHandle" Name="PowerPoint" />
                  </ActivityAction.Argument>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="551.2,2659.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SavePresentationFileAs sap2010:Annotation.AnnotationText="基本のプレゼンテーション ファイル「Report Template.pptx」から開始し、変更を加える新しいコピーを保存します。変更を加える前に新しいコピーを保存することで、プロジェクトを再度実行し、同じ結果を確認することができます。元のファイルに変更が加えられると、スライド番号や内容などが次回の実行時に変わってしまいます。" DisplayName="名前をつけて PowerPoint ファイルを保存" FilePath="Opportunities.pptx" sap:VirtualizedContainerService.HintSize="508,308.8" sap2010:WorkflowViewState.IdRef="SavePresentationFileAs_1" Presentation="[PowerPoint]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SavePresentationFileAs>
                    <Sequence DisplayName="プレゼンテーション内のプレースホルダ― テキストを置換" sap:VirtualizedContainerService.HintSize="508,631.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:FindAndReplaceTextInPresentation NumberOfReplacements="{x:Null}" sap2010:Annotation.AnnotationText="プレゼンテーション内の既存のテキストを検索し、指定した値に置換します。この例では、ピボット テーブル内の合計のうちの 1 つです。そのため、このセルのアドレスは [カスタム入力] と「Last Pivot Table Row」の値を使用して算出されます。" DisplayName="プレゼンテーション内のテキストを置換" sap:VirtualizedContainerService.HintSize="412,266.4" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextInPresentation_1" MatchCase="False" Presentation="[PowerPoint]" ReplaceWith="[Excel.Sheet(&quot;Pivot Table&quot;).Cell(string.Format(&quot;C{0}&quot;, Saved.Values(Of Int32)(&quot;Last Pivot Table Row&quot;).ToString))]" SearchFor="&lt;opportunity_count&gt;" WholeWordsOnly="False">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:FindAndReplaceTextInPresentation>
                      <ui:FindAndReplaceTextInPresentation NumberOfReplacements="{x:Null}" DisplayName="プレゼンテーション内のテキストを置換" sap:VirtualizedContainerService.HintSize="412,206.4" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextInPresentation_2" MatchCase="False" Presentation="[PowerPoint]" ReplaceWith="[Excel.Sheet(&quot;Pivot Table&quot;).Cell(string.Format(&quot;B{0}&quot;, Saved.Values(Of Int32)(&quot;Last Pivot Table Row&quot;).ToString))]" SearchFor="&lt;opportunities_value&gt;" WholeWordsOnly="False" />
                    </Sequence>
                    <Sequence DisplayName="新しいスライドとコンテンツを追加" sap:VirtualizedContainerService.HintSize="508,1548" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InsertSlide InsertPosition="{x:Null}" sap2010:Annotation.AnnotationText="プレゼンテーションに新しいスライドを追加します。&#xA;&#xA;[新しいスライド番号を次として保存] は新しいスライドの番号を返します。スライド番号はスライドに変更を加える際に必要であるため、この値は後に使用する [スライドにテキストを追加] アクティビティなどで使用されます。&#xA;" DisplayName="新しいスライドを追加" sap:VirtualizedContainerService.HintSize="467.2,398.4" sap2010:WorkflowViewState.IdRef="InsertSlide_1" InsertType="End" InsertedAtPosition="[Saved.Values(Of Int32)(&quot;Added Slide Number&quot;)]" LayoutName="Title and Content" Presentation="[PowerPoint]" SlideMasterName="(default)">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InsertSlide>
                      <ui:InsertTextInPresentation sap2010:Annotation.AnnotationText="スライドのタイトルのプレースホルダーにテキストを追加します (PowerPoint 内では「タイトルを入力」として表示されます。)&#xA;&#xA;[新しいスライドを追加] アクティビティで保存された [Added Slide Number] は [スライド番号] としてこのアクティビティで使用されます。これにより、どのスライドのプレースホルダーにテキストを追加するかをアクティビティに指定します。" DisplayName="スライドにテキストを追加" sap:VirtualizedContainerService.HintSize="467.2,343.2" sap2010:WorkflowViewState.IdRef="InsertTextInPresentation_1" Presentation="[PowerPoint]" ShapeName="Title 1" SlideIndex="[Saved.Values(Of Int32)(&quot;Added Slide Number&quot;)]" Text="ステージ毎のバリュー (USD)">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InsertTextInPresentation>
                      <ueab:ExcelForEachRow sap2010:Annotation.AnnotationText="ピボット テーブル内の各値と [Sum of Total (USD)] 列の値に対して箇条書きを作成します。&#xA;&#xA;各行に対して新しい箇条書きを作成するには、値を追加するテキストの末尾に改行が必要です。" DisplayName="繰り返し (Excel の各行)" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="467.2,608" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_2" Range="[Excel.Sheet(&quot;Pivot Table&quot;).PivotTable(&quot;Pivot_Table&quot;)]" SaveAfterEachRow="False">
                        <ueab:ExcelForEachRow.Body>
                          <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                            <ActivityAction.Argument1>
                              <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                            </ActivityAction.Argument1>
                            <ActivityAction.Argument2>
                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                            </ActivityAction.Argument2>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="455.2,326.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InsertTextInPresentation DisplayName="スライドにテキストを追加" sap:VirtualizedContainerService.HintSize="412,235.2" sap2010:WorkflowViewState.IdRef="InsertTextInPresentation_2" Presentation="[PowerPoint]" ShapeName="Content Placeholder 2" SlideIndex="[Saved.Values(Of Int32)(&quot;Added Slide Number&quot;)]" Text="[string.Format(&quot;{0}: {1}{2}&quot;, CurrentRow.ByField(&quot;A&quot;).ToString, CurrentRow.ByField(&quot;B&quot;).ToString, Environment.NewLine)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InsertTextInPresentation>
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ExcelForEachRow>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:PowerPointApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:PowerPointApplicationScope>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
  </ueab:SequenceX>
</Activity>
<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1408,2863" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="562,2798" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.ja.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap2010:Annotation.AnnotationText="これは、完全に機能するテンプレートです。試しに実行するには [実行] をクリック、または F5 キーを押します。&#xA;&#xA;ベスト プラクティスでは、1 つ以上のアクティビティで使用する値を後で使用するために保存し、保存した値を必要な場所で名前を使って参照します。この方法を活用すれば、値を変更する必要がある場合でも、値を 1 度更新するだけですべてのアクティビティにおける値が更新されます。&#xA;&#xA;この例では、完成したテンプレートの名前が 2 つの別々のアクションで使用されます。&#xA;1.1. [名前をつけて文書を保存] アクティビティが変更対象としてテンプレートのコピーを作成するとき&#xA;2. メールの本文に使用するファイルを指定するとき" DisplayName="後のために保存" sap:VirtualizedContainerService.HintSize="520,288" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="ue:ExcelValue">[Saved.Values(Of ExcelValue)("Email Body")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ue:ExcelValue">[string.Format("Email Body.docx")]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <p:WordApplicationScope sap2010:Annotation.AnnotationText="Excel の表と画像を挿入する EmailBody.docx を開きます。" DisplayName="Word ファイルを使用" FilePath="EmailTemplate.docx" sap:VirtualizedContainerService.HintSize="520,1514" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
      <p:WordApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WordDocument">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="508,1314" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:WordSaveAs sap2010:Annotation.AnnotationText="変更を加える前に、テンプレートを新規ファイルとして保存します。これにより、元のテンプレートに変更が加えられることなく次回もそのまま使用できます。&#xA;&#xA;このアクティビティは、[後のために保存] アクティビティで指定した値を新しいファイル名として使用します。" DisplayName="名前をつけて文書を保存" FilePath="[Saved.Values(Of ExcelValue)(&quot;Email Body&quot;)]" sap:VirtualizedContainerService.HintSize="466,253" sap2010:WorkflowViewState.IdRef="WordSaveAs_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSaveAs>
            <ueab:ExcelApplicationCard Password="{x:Null}" sap2010:Annotation.AnnotationText="データ テーブルを取得する Excel ファイルを開きます。" DisplayName="Excel ファイルを使用" sap:VirtualizedContainerService.HintSize="466,713" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="Suppliers.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Suppliers" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="454,423" sap2010:WorkflowViewState.IdRef="Sequence_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordInsertDataTable Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" sap2010:Annotation.AnnotationText="Excel ファイル「Suppliers」のデータ テーブルを Word 文書に挿入し、プレースホルダー テキスト &quot;Excel table&quot; と置換します。" DataTable="[Suppliers.Table(&quot;Table1&quot;)]" DisplayName="データテーブルを挿入" sap:VirtualizedContainerService.HintSize="412,333" sap2010:WorkflowViewState.IdRef="WordInsertDataTable_1" InsertRelativeTo="Text" Position="Replace" Text="&lt;Excel table&gt;">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:WordInsertDataTable>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
            <p:WordReplacePicture sap2010:Annotation.AnnotationText="['代替テキスト' がある画像を検索] プロパティに基づき、Word 文書内のプレースホルダー画像を目的の画像で置換します。" DisplayName="画像を置換" sap:VirtualizedContainerService.HintSize="466,178" sap2010:WorkflowViewState.IdRef="WordReplacePicture_1" PictureAltText="StudioX logo" PicturePath="studiox.png">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordReplacePicture>
          </Sequence>
        </ActivityAction>
      </p:WordApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:WordApplicationScope>
    <umab:OutlookApplicationCard Account="{x:Null}" sap2010:Annotation.AnnotationText="既定のアカウントで Outlook への接続を開きます ([既定のメール アカウント] を使用すると他のユーザーとも簡単に共有できます)。" DisplayName="Outlook アカウントを使用" sap:VirtualizedContainerService.HintSize="520,826" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_1">
      <umab:OutlookApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlook" />
          </ActivityAction.Argument>
          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="454,600" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <umab:SendMailX Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" Account="[Outlook]" sap2010:Annotation.AnnotationText="Outlook メールを作成し、[後のために保存] アクティビティで指定したファイルのコンテンツをメールの本文として使用します。&#xA;&#xA;これにより、本文に表や画像を挿入することができます。また、箇条書き、太字、斜体、異なるフォントやサイズなどといったその他の書式設定も加えることができます。&#xA;&#xA;注: [下書きとして保存] がオンになっているため、メールは送信されず「下書き」フォルダーに保存されます。" BodyDocumentPath="[Saved.Values(Of ExcelValue)(&quot;Email Body&quot;)]" DisplayName="Outlook メールを送信" sap:VirtualizedContainerService.HintSize="412,510" sap2010:WorkflowViewState.IdRef="SendMailX_1" MaxBodyDocumentSizeMB="2" Subject="HTML Email Body from StudioX" To="person@mailinator.com" UseDocumentAsBody="True">
              <umab:SendMailX.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </umab:SendMailX.Files>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </umab:SendMailX>
          </Sequence>
        </ActivityAction>
      </umab:OutlookApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </umab:OutlookApplicationCard>
  </ueab:SequenceX>
</Activity>